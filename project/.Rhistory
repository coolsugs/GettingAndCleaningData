install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirll()
swirl()
bye
exit
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
getwd()
setwd("d:/coursera/project")
rmarkdown::render("run_analysis.R")
setwd("D:/GIT_Coursera/GettingAndCleaningData/project")
getwd()
rmarkdown::render("run_analysis.R")
rmarkdown::render("run_analysis.R")
getwd()
codetools::makeCodeWalker("run_analysis.R")
codebook("run_analysis.R")
getwd()
getwd()
knit("Codebook.rmd", outpu = "Codebook.md", tangle = FALSE)
library(knitr)
knit("Codebook.rmd", outpu = "Codebook.md", tangle = FALSE)
getwd
getwd()
